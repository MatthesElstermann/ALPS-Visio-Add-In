//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VisioAddIn.Resources {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal strings() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("VisioAddIn.Resources.strings", typeof(strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SBPM ähnelt.
        /// </summary>
        public static string AnchorBarMergeTitle {
            get {
                return ResourceManager.GetString("AnchorBarMergeTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Model Explorer ähnelt.
        /// </summary>
        public static string AnchorBarTitle {
            get {
                return ResourceManager.GetString("AnchorBarTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cancel ähnelt.
        /// </summary>
        public static string Cancel {
            get {
                return ResourceManager.GetString("Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rename: ähnelt.
        /// </summary>
        public static string ChangeLayerNameRename {
            get {
                return ResourceManager.GetString("ChangeLayerNameRename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rename layer ähnelt.
        /// </summary>
        public static string ChangeLayerNameTitle {
            get {
                return ResourceManager.GetString("ChangeLayerNameTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rename layer ähnelt.
        /// </summary>
        public static string MenuItemChangeLayer {
            get {
                return ResourceManager.GetString("MenuItemChangeLayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Move 1 down ähnelt.
        /// </summary>
        public static string MenuItemMoveDown {
            get {
                return ResourceManager.GetString("MenuItemMoveDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Move 1 up ähnelt.
        /// </summary>
        public static string MenuItemMoveUp {
            get {
                return ResourceManager.GetString("MenuItemMoveUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Properties ähnelt.
        /// </summary>
        public static string MenuItemProperties {
            get {
                return ResourceManager.GetString("MenuItemProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No ähnelt.
        /// </summary>
        public static string No {
            get {
                return ResourceManager.GetString("No", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die OK ähnelt.
        /// </summary>
        public static string OK {
            get {
                return ResourceManager.GetString("OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Refresh ähnelt.
        /// </summary>
        public static string Refresh {
            get {
                return ResourceManager.GetString("Refresh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change the background of this page by choosing the separation style for the extending page ähnelt.
        /// </summary>
        public static string SeparationChooseSepTooltip {
            get {
                return ResourceManager.GetString("SeparationChooseSepTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Full sep. ähnelt.
        /// </summary>
        public static string SeparationFullSep {
            get {
                return ResourceManager.GetString("SeparationFullSep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display intransparent separator between underlying layer and this layer ähnelt.
        /// </summary>
        public static string SeparationFullSepTooltip {
            get {
                return ResourceManager.GetString("SeparationFullSepTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No sep. ähnelt.
        /// </summary>
        public static string SeparationNoSep {
            get {
                return ResourceManager.GetString("SeparationNoSep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display no separator between underlying layer and this layer ähnelt.
        /// </summary>
        public static string SeparationNoSepTooltip {
            get {
                return ResourceManager.GetString("SeparationNoSepTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Standard sep. ähnelt.
        /// </summary>
        public static string SeparationStandardSep {
            get {
                return ResourceManager.GetString("SeparationStandardSep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display translucent separator between underlying layer and this layer ähnelt.
        /// </summary>
        public static string SeparationStandardSepTooltip {
            get {
                return ResourceManager.GetString("SeparationStandardSepTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose... ähnelt.
        /// </summary>
        public static string WindowChangePropertiesChoose {
            get {
                return ResourceManager.GetString("WindowChangePropertiesChoose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose content separation: ähnelt.
        /// </summary>
        public static string WindowChangePropertiesChooseSep {
            get {
                return ResourceManager.GetString("WindowChangePropertiesChooseSep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose content separation from {0} ähnelt.
        /// </summary>
        public static string WindowChangePropertiesChooseSepExtended {
            get {
                return ResourceManager.GetString("WindowChangePropertiesChooseSepExtended", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Extends ähnelt.
        /// </summary>
        public static string WindowChangePropertiesExtends {
            get {
                return ResourceManager.GetString("WindowChangePropertiesExtends", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Priority ähnelt.
        /// </summary>
        public static string WindowChangePropertiesPriority {
            get {
                return ResourceManager.GetString("WindowChangePropertiesPriority", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} - Properties ähnelt.
        /// </summary>
        public static string WindowChangePropertiesTitle {
            get {
                return ResourceManager.GetString("WindowChangePropertiesTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Should Shape: {0} ähnelt.
        /// </summary>
        public static string WindowSnapConfirmationShouldShapeSnap {
            get {
                return ResourceManager.GetString("WindowSnapConfirmationShouldShapeSnap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die be snapped to shape: {0}? ähnelt.
        /// </summary>
        public static string WindowSnapConfirmationShouldSnapTo {
            get {
                return ResourceManager.GetString("WindowSnapConfirmationShouldSnapTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Snap settings ähnelt.
        /// </summary>
        public static string WindowSnapConfirmationTitle {
            get {
                return ResourceManager.GetString("WindowSnapConfirmationTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die stay snapped to shape: {0}? ähnelt.
        /// </summary>
        public static string WindowSnapMaintenanceShouldStaySnapped {
            get {
                return ResourceManager.GetString("WindowSnapMaintenanceShouldStaySnapped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Yes ähnelt.
        /// </summary>
        public static string Yes {
            get {
                return ResourceManager.GetString("Yes", resourceCulture);
            }
        }
    }
}
